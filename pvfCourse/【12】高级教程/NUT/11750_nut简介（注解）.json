{
    "content": "<pre>\n<code>1.state\nstate翻译为状态，即人物的状态。\n人物处于战立状态，人物状态变量就设定为state_stand\n人物处于奔跑状态，人物状态变量就设定为state_dash\n \n如果人物要释放技能，就设定人物状态变量为该技能的状态\n就是这样了,貌似只有state_stand这个状态可以主动去设(*皿* ) \n \n \n2.一部分函数的解析（常说的灰技能说不定就在这里）\n经常出现的主函数\ncheckExecutableSkill_* 是按下技能键后执行\ncheckCommandEnable_* 是判断是否能够释放的函数\n以上*替换为skl列表里的技能名称\ntip:灰技能可能就在上面两个函数，其实，灰技能也和skl文件有关的哦！！\n \n------------------------------------------------------------------\nonSetState_* 设定状态的\ntip:obj.sq_AddSetStatePacket函数执行后会执行这个函数\n \nonEndCurrentAni_* 当前帧结束后执行的函数\n \nonProc_* 在人物处于技能状态过程中会自动执行的函数\ntip:很重要的函数\n \nonKeyFrameFlag_* SET FLAG 了解下,懂的人自然懂\ntip:这函数我真的很少用，\n \nonAttack_* 攻击敌人后执行的函数，可以返回受到伤害的对象\ntip:这个就是写抓取技能的基础啊！！！这个函数可是很有用的\n \n以上*都是对应了sqr里的pushState函数第三个参数\n实际上其他的技能后面的都是对应第三个参数\n-------------------------------------------------------------------------\n3，obj,damger对象的一部分常用函数（方法）\n \n \nobj.sq_IsUseSkill函数，该函数使用后会使技能进入cd，换句话说没有这个函数技能无CD\n \nobj.sq_AddSetStatePacket函数，设定状态函数\n \nobj.setCurrentPos设定坐标函数，但是人物直接用会卡墙，怪物就不会?\n \nobj.sq_SetStaticSpeedInfo是否吃攻速\n \nobj.getXPos()获得x轴，把里面的x替换成yz，你懂得\n \nobj.sq_timer_.isOnEvent判断时间函数,需要obj.getVar()支持，或者直接obj\n \n*.sq_timer_.setParameter方法，*变量设定为时间变量，每隔特定时间触发。\n配合 *.sq_timer_.resetInstant(0)才可使用 *.sq_timer_.isOnEvent去检测\n是否允许触发\n \nobj.setTimeEvent依然是设定时间的函数，但是和主函数onTimeEvent_*有关联\n个人推荐用这个函数\n \nobj.sq_SetfindNearLinearMovablePos不卡墙的人物坐标设置\n \nobj.sq_IsMyControlObject检测是否使用过\n \nobj.sq_StopMove停止移动\n \nobj.setCurrentDirection设定obj的朝向\n \nobj.sq_GetCurrentAni获取当前帧文件，获取帧数和帧时间的必要\n \nobj.sq_GetCurrentFrameIndex获取帧数\n \nsq_GetCurrentTime帧的时间\n \n \nsq_CreatePooledObject生成临时特效函数，第一个参数是ani，第二个默认true\n \nsq_GetDirection参数写对象即可获得该对象的朝向，返回值为ENUM_DIRECTION_RIGHT何 ENUM_DIRECTION_LEFT\n \nsq_GetCurrentAttackInfo获得特定对象的攻击信息\n \nsq_SetChangeStatusIntoAttackInfo吃异常了解下\n \nsq_HoldAndDelayDie强控敌人\n \n \nonattack</code></pre>\n\n<pre>\n<code>nut基本信息\n\nPHYSICAL_ATTACK &lt;- 0 \t\t  //物理攻击\nMAGICAL_ATTACK &lt;- 1 \t\t  //魔法攻击\nMAGICAL_DEFENSE &lt;- 2 \t\t  //魔法防御\nPHYSICAL_DEFENSE &lt;- 3 \t\t  //物理防御\nEQUIPMENT_PHYSICAL_ATTACK &lt;- 4 \t\t  //设备物理攻击\nEQUIPMENT_PHYSICAL_DEFENSE &lt;- 5 \t\t  //设备物理防御\nPHYSICAL_ATTACK_BONUS &lt;- 6 \t\t  //物理攻击加成\nMAGICAL_ATTACK_BONUS &lt;- 7 \t\t  //魔法攻击加成\nJUMP_POWER &lt;- 8 \t\t  //跳转功率\nJUMP_SPEED_RATE &lt;- 9 \t\t  //更改状态、类型、跳跃、速度、速度\nATTACK_SPEED &lt;- 10 \t\t  //攻击速度\nMOVE_SPEED &lt;- 11 \t\t  //移动速度\nCAST_SPEED &lt;- 12 \t\t  //施法速度\nHP_MAX &lt;- 13 \t\t  //HP_MAX\nHP_REGEN_RATE &lt;- 14 \t\t  //HP恢复值\nPHYSICAL_CRITICAL_HIT_RATE &lt;- 15 \t\t  //物理命中率\nMAGICAL_CRITICAL_HIT_RATE &lt;- 16 \t\t  //魔法命中率\nPHYSICAL_BACK_ATTACK_CRITICAL &lt;- 17 \t\t  //物理暴击\nMAGICAL_BACK_ATTACK_CRITICAL &lt;- 18 \t\t  //魔法暴击\nCRITICAL_TOLERANCE_RATE &lt;- 19 \t\t  //攻击回避率\nELEMENT_TOLERANCE_FIRE &lt;- 20 \t\t  //火属性抗性\nELEMENT_TOLERANCE_WATER &lt;- 21 \t\t  //水属性抗性\nELEMENT_TOLERANCE_DARK &lt;- 22 \t\t  //暗属性抗性\nELEMENT_TOLERANCE_LIGHT &lt;- 23 \t\t  //光属性抗性\nELEMENT_TOLERANCE_ALL &lt;- 24 \t\t  //全属性抗性\nELEMENT_TOLERANCE_ZERO &lt;- 25 \t\t  //减少所有抗性\nACTIVESTATUS_TOLERANCE_ALL &lt;- 26 \t\t  //增加所有抗性\nACTIVEPROPERTY_STUCK &lt;- 27 \t\t  //活动属性\nBACK_ATTACK_STUCK_TOLERANCE &lt;- 28 \t\t  //攻击_卡住_容忍度\nMP_REGEN_RATE &lt;- 29 \t\t  //状态类型更新率\nEXTRA_SPEED_RATE &lt;- 30 \t\t  //状态\\类型\\额外\\速度\\费率\nEQUIPMENT_MAGICAL_ATTACK &lt;- 31 \t\t  //改变状态类型装备魔法攻击\nEQUIPMENT_MAGICAL_DEFENSE &lt;- 32 \t\t  //改变状态类型装备魔法防御\nSTUCK &lt;- 33 \t\t  //无法移动\nHIT_RECOVERY &lt;- 34 \t\t  //恢复移动\nMELEE_HIT_DELAY &lt;- 35 \t\t  //更改状态类型近战命中延迟\nCAHNGE_STATUS_TYPE_EQUIPMENT_ALL_STAT &lt;- 36 \t\t  //状态_类型_设备_所有_状态\nCUSTOM &lt;- 37              //自定义类型\nEXP_DOUBLE &lt;- 38 \t\t  //经验值翻倍\nEVIL_UP &lt;- 39 \t\t  //抗魔值增加\nEVIL_DOWN &lt;- 40 \t\t  //抗魔值减少\nRIGIDITY &lt;- 41 \t\t  //硬直\nELEMENT_ATTACK_FIRE &lt;- 42 \t\t  //改变状态类型为火元素攻击\nELEMENT_ATTACK_WATER &lt;- 43 \t\t  //改变状态类型为水元素攻击\nELEMENT_ATTACK_DARK &lt;- 44 \t\t  //改变状态类型为暗元素攻击\nELEMENT_ATTACK_LIGHT &lt;- 45 \t\t  //改变状态类型为光元素攻击\nELEMENT_ATTACK_ALL &lt;- 46 \t\t  //改变状态类型为全元素攻击\nDISEASE &lt;- 47 \t\t  //毒\nMP_MAX &lt;- 48 \t\t  //MP MAX\nCOOLTIME_DECLINE &lt;- 49 \t\t  //减少冷却\nPHYSICAL_CRITICAL_DAMAGE_RATE &lt;- 50 \t\t  //减少物理防御力\nMAGICAL_CRITICAL_DAMAGE_RATE &lt;- 51 \t\t  //减少魔法防御力\nBLOODWAR_GROW_ABILITY &lt;- 52 \t\t  //血战_成长_能力\nADDITIONAL_PHYSICAL_GENUINE_ATTACK &lt;- 53 \t\t  //附加物理真伤\nADDITIONAL_MAGICAL_GENUINE_ATTACK &lt;- 54 \t\t  //附加魔法真伤\nSUMMON_SKILL_POWER_BONUS_RATE &lt;- 55 \t\t  //召唤兽的属性奖励\nANTIEVIL &lt;- 56 \t\t  //减少邪恶\nPHYSICAL_ABSOLUTE_DAMAGE &lt;- 57 \t\t  //物理损伤绝对损伤占\nTRAIN_NO_BREATH_TIME &lt;- 58 \t\t  //幽灵列车迷雾时间\nLINK &lt;- 59 \t\t  //字符链接\nINCREASE &lt;- 60       //金币\nMAX &lt;- 61          //类型_MAX</code></pre>\n\n<pre>\n<code>-----------------------------------\ncheckExecutableSkill\n \n*检查技能使用函数，如若不写则导致无法使用技能。\n*该函数共（1）个参数\n*function checkExecutableSkill_xxx(obj:对象)\n-----------------------------------\ncheckCommandEnable\n \n*检查按键是否打开\n*该函数共（1）个参数\n*function checkCommandEnable_xxx(obj:对象)\n-----------------------------------\nonSetState\n \n*当对象执行到该技能状态时调用的函数，若不写导致人物卡死。\n*该函数共（4）个参数\n*onSetState_xxx(obj:对象, state:该技能状态, datas:子状态数据, isResetTimer；在重置的时间)\n-----------------------------------\nonEndCurrentAni\n \n*对象Ani演出结束时调用函数，若不写导致人物在技能演出结束后卡死。\n*该函数共（1）个参数\n*function onEndCurrentAni_xxx(obj:对象)\n-----------------------------------\nonKeyFrameFlag\n \n*对象使用的Ani中有[SET FLAG]时调用函数\n*该函数共（2）个参数\n*function onKeyFrameFlag_xxx(obj:对象,flagIndex:Ani中写入的数字值)\n*范例\n*[FRAME005]\n*   [IMAGE]\n*       `Character/Swordman/Equipment/Avatar/skin/sm_body%04d.img`\n*       114\n*   [IMAGE POS]\n*       -232    -333\n*   [DELAY]\n*       40\n*   [SET FLAG]（当人物帧运行到该标志数字下，触发对应函数内容）\n*       1\n*   [DELAY]\n*       40\n-----------------------------------\nsq_IsUseSkill\n \n*判断技能是否可以使用\n*该函数共（1）个参数\n*obj.sq_IsUseSkill(技能的数字编号);\n-----------------------------------\nsq_AddSetStatePacket\n \n*发送状态，在参数1内填写状态数值可使对象角色进行对应状态\n*例如obj.sq_AddSetStatePacket(STATE_STAND, STATE_PRIORITY_USER, false);人物将从任何状态下强制进入状态\n*该函数共（3）个参数\n*obj.sq_AddSetStatePacket(整数型(状态数值), 整数型(状态优先级), false);\n \n*第1个参数的拓展（少部分常用状态指向）\nSTATE_STAND &lt;- 0               //  站立\nSTATE_DIE &lt;- 5                 //  死亡\nSTATE_JUMP &lt;- 6            //  跳跃\nSTATE_JUMP_ATTACK &lt;- 7         //  跳跃攻击\nSTATE_ATTACK &lt;- 8              //  普通攻击\nSTATE_DASH &lt;- 14               //  冲刺 \nSTATE_DASH_ATTACK &lt;- 15        //  冲刺攻击\n*第2个参数的拓展（优先级）\n*STATE_PRIORITY_AUTO &lt;- 0              //  根据时间或条件自动调整优先级\nSTATE_PRIORITY_USER &lt;- 1               //  玩家使用的优先级\nSTATE_PRIORITY_HALF_FORCE &lt;- 2         //  非正常途径的优先级，比强制要低\nSTATE_PRIORITY_FORCE &lt;- 3              //  强制进入 (倒下、受伤、死亡、被强制控制下)可转变的优先级\nSTATE_PRIORITY_IGNORE_FORCE &lt;- 4       //  无视强制进入 (수플렉스로 상대 잡기 등)\n-----------------------------------\nsq_GetState\n \n*获得人物当前的状态值，获得的值为整数\n-----------------------------------\nsq_StopMove\n \n*停止移动\n-----------------------------------\nsq_SetCurrentAnimation\n \n*设置Ani演出\n*obj.sq_SetCurrentAnimation(Ani指向编号/整数型);\n-----------------------------------\nsq_SetStaticSpeedInfo\n \n*设置静态速度信息（跟随人物攻速调整Ani演出时间，换句话说攻速越快人物动作越快，反之亦然。）\n*该函数共（6）个参数\n*1-4为固定基础值，无须修改\n*5-6为倍率，浮点数型，填写1.5可获得更为快速的演出时间。\n*obj.sq_SetStaticSpeedInfo(SPEED_TYPE_ATTACK_SPEED, SPEED_TYPE_ATTACK_SPEED,SPEED_VALUE_DEFAULT, SPEED_VALUE_DEFAULT, 1.0, 1.0);\n-----------------------------------\nsq_IsMyControlObject\n \n*判断对象是否是玩家的控制对象，用来区分玩家与队友。\n-----------------------------------\nsq_GetIntData\n \n*获取Skl文件内的静态数据\n*该函数共（2）个参数\n*obj.sq_GetIntData(整数型/技能编号, 整数型/静态数据的对应位置-0号开始计算);\n*例子：local xPosMin = obj.sq_GetIntData(SKILL_WIND_STRIKE, 0);\n*获取魔法旋风技能的0号位技能静态值\n-----------------------------------\nsq_GetBonusRateWithPassive\n \n*获取百分比伤害\n*该函数共（4）个参数\n*obj.sq_GetBonusRateWithPassive(整数型/技能编号, 整数型/技能状态, 整数型/技能伤害读取到Skl文件的动态数据值, 浮点数型/调整伤害的倍率);\n-----------------------------------\nsq_GetPowerWithPassive\n \n*获取固定伤害\n*该函数共（5）个参数\n*obj.sq_GetPowerWithPassive(整数型/技能编号, 整数型/技能状态, 整数型/技能伤害读取到Skl文件的动态数据值, 整数型/技能伤害读取到Skl文件的动态数据值, 浮点数型/调整伤害的倍率);\n-----------------------------------\nsq_GetLevelData\n \n*获取Skl文件内的动态数据\n*该函数共（1）个参数\n*obj.sq_GetLevelData(整数型/动态数据的对应位置-0号开始计算);</code></pre>\n\n<p>&nbsp;</p>\n",
    "auth_users": "学院搬运工",
    "img": "https://dafstatic.oss-cn-beijing.aliyuncs.com/static/title/level4.gif",
    "create_at": "2023-07-03T12:54:08.957",
    "view_num": 1951
}
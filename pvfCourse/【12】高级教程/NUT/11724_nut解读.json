{
    "content": "<pre>\n<code class=\"language-javascript\">ENUM_ICE_CRASH_SUBSTATE_START &lt;-0 ;              //代表第一个状态，准备\nENUM_ICE_CRASH_SUBSTATE_LOOP  &lt;-1 ;              //\nENUM_ICE_CRASH_SUBSTATE_LOOP_ATTACKING  &lt;-2 ; \nENUM_ICE_CRASH_SUBSTATE_END   &lt;-3 ;              \n\nENUM_ICE_CRASH_TIMER_SPIN &lt;- 0;\nENUM_ICE_CRASH_MULTI_HIT  &lt;- 1;\n\nVAR_ICE_CRASH &lt;-0\n\nfunction checkExecutableSkill_IceCrash(obj)\n{\n\n    if(!obj) return false;\n\n    local b_useskill = obj.sq_IsUseSkill(SKILL_ICE_CRASH);\n    if(b_useskill) {\n        obj.sq_IntVectClear();\n        //可以理解为定义全局数组，这个数组内，该数组可以被这个技能的所有函数所访问\n        obj.sq_IntVectPush(ENUM_ICE_CRASH_SUBSTATE_START); \n        //数组放入 0 上面的变量定义\n        obj.sq_AddSetStatePacket(STATE_ICE_CRASH , STATE_PRIORITY_USER, true);\n        //执行完毕立马跳转onSetState_IceCrash\n        return true;\n    }    \n    return false;\n\n}\n\nfunction checkCommandEnable_IceCrash(obj)\n{\n    if(!obj)\n        return false;\n\n    local state = obj.sq_GetState();\n\n    if(state == STATE_ATTACK) {\n\n        return obj.sq_IsCommandEnable(SKILL_ICE_CRASH); \n    }\n\n    return true;\n}\n\nfunction onEndState_IceCrash(obj, newState)\n{\n    if(!obj)\n        return;\n\n    if(newState != STATE_ICE_CRASH)\n    {\n        removeAllIceCrashAppendage(obj);\n        sq_RemoveParticle(\"Character/Mage/Particle/IceCrashIceDust.ptl\",obj);\n    }\n}\n\nfunction onSetState_IceCrash(obj, state, datas, isResetTimer)\n{\n    if(!obj) return;\n\n    local level           = sq_GetSkillLevel(obj, SKILL_ICE_CRASH);\n    //获取寒冰穿刺的等级\n    local spinDistance = sq_GetIntData(obj, SKILL_ICE_CRASH, 0, level); \n    //获取静态数据编号0数据（最后的参数可要可不要）\n    local spinSpeed    = sq_GetIntData(obj, SKILL_ICE_CRASH, 1, level); \n    //获取静态数据编号1数据（最后的参数可要可不要）\n    local spinTime       = (spinDistance.tofloat()/spinSpeed.tofloat()) * 1000.0;    \n    //根据0 和 1 算出时间(路径 = 速度 * 时间)    \n    local multiHitGap  = sq_GetLevelData(obj, SKILL_ICE_CRASH, 0, level);\n  //获取动态数据0，其实为打击次数\n    local subState = sq_GetVectorData(datas, 0);\n    //获取checkExecutableSkill里定义的全局数组，获取第0个（就是刚刚push进去的值0）\n    obj.setSkillSubState(subState);    \n    //这个数开始代表了全局的小状态\n    if(subState == ENUM_ICE_CRASH_SUBSTATE_START) {\n    //如果我的小状态为 0 \n        local attackPower = obj.sq_GetBonusRateWithPassive(SKILL_ICE_CRASH , STATE_ICE_CRASH, 1, 1.0);\n        //获取攻击参数动态数据编号为1，obj.sq_GetBonusRateWithPassive是获取百分比伤害\n        //参数 技能lst，状态参数，在动态数据里的编号，1.0代表了1倍伤害，如果改成10.0就是10倍伤害\n        //最后的参数必须要加小数点！！！代表浮点数\n        local var = obj.getVar();\n        //obj.getVar()也是定义全局数组。var相当于指向这个数组\n        //关于啥是全局数组\n        //举例子吧 onSetState现在执行了语句obj.getVar().clear_vector()清除数组所有元素;obj.getVar().push_vector(99);放进一个数，编号为0\n        //那么 onEndCurrentAni 里如果写上语句 local a = obj.getVar().get_vector(0);获取编号为0的数,那么a 为 99\n        //如果在onSetState再obj.getVar().push_vector(9222) 在onEndCurrentAni 里 local b = obj.getVar().get_vector(1); 这个b就是 9222\n        //数组有很多种，最常用的是数值数组和对象数组。\n        //数值数组存储的是数值，而对象数组存储的是指向了这个对象的一个变量。\n        //以后会有接触的\n        //还有数组怎么定义名称\n        //  local var1 = obj.getVar(\"1\")\n    //  local var2 = obj.getVar(\"2\") \n    //那么var1和var2分别指向了数组名称为\"1\"和\"2\"的数组，互不干扰，getVar里不写也没有关系。代表名称为空\n        var.setBool(VAR_ICE_CRASH,true);\n        //设定布尔代数 数组第0个为真，\n\n        obj.sq_StopMove();\n        //禁止我的上下左右键可以移动\n        obj.sq_SetCurrentAnimation(CUSTOM_ANI_ICE_CRASH_START);\n        //设定帧\n        obj.sq_SetCurrentAttackInfo(CUSTOM_ATTACK_INFO_ICE_CRASH);    \n        //设定攻击信息\n        local currentAttackInfo = sq_GetCurrentAttackInfo(obj);\n        //获取我的攻击信息，这个一定要获取\n        sq_SetCurrentAttackBonusRate(currentAttackInfo, attackPower);\n        //设定攻击伤害，为特定数据\n        sq_SetCurrentAttackeHitStunTime(currentAttackInfo, 0);\n        //???????可以无视\n        obj.sq_PlaySound(\"MW_ICECRASH\");\n    }\n    else if(subState == ENUM_ICE_CRASH_SUBSTATE_LOOP) {        \n        obj.sq_SetCurrentAnimation(CUSTOM_ANI_ICE_CRASH_LOOP);\n        obj.setTimeEvent(ENUM_ICE_CRASH_TIMER_SPIN,spinTime.tointeger(),1,false);\n        //时间控制函数 去看看onTimeEvent函数有两个参数对不 timeEventIndex, timeEventCount\n        //setTimeEvent 参数 第一个是 id 对应了 timeEventIndex\n        //第二个是时间 为整数型 第三个是 时间触发次数 第四个是是否一开始触发 true就是一开始触发，反之没有\n\n        //举个例子obj.setTimeEvent(0,100,100,false)\n        //函数执行后，每100毫秒就会执行函数onTimeEvent timeEventIndex 对应0 timeEventCount 对应触发次数\n        //当执行了100次以后，就不会再次执行了，写0，可以无限执行。\n\n        obj.setTimeEvent(ENUM_ICE_CRASH_MULTI_HIT,multiHitGap,9999,false);        \n        //同上理\n    }    \n    else if(subState == ENUM_ICE_CRASH_SUBSTATE_LOOP_ATTACKING) {\n\n        if(!obj.isExistTimeEvent(ENUM_ICE_CRASH_TIMER_SPIN)) {             \n            obj.setTimeEvent(ENUM_ICE_CRASH_TIMER_SPIN,spinTime.tointeger(),1,false);\n            obj.setTimeEvent(ENUM_ICE_CRASH_MULTI_HIT,multiHitGap,9999,false);    \n        }\n\n        obj.sq_SetCurrentAnimation(CUSTOM_ANI_ICE_CRASH_LOOP_ATTACK);\n    }    \n    else if(subState == ENUM_ICE_CRASH_SUBSTATE_END) {\n        obj.sq_StopMove();\n        obj.sq_SetCurrentAnimation(CUSTOM_ANI_ICE_CRASH_END);\n        obj.sq_SetCurrentAttackInfo(CUSTOM_ATTACK_INFO_ICE_CRASH_LAST);    \n\n        sq_RemoveParticle(\"Character/Mage/Particle/IceCrashIceDust.ptl\",obj);\n\n        local attackPower = obj.sq_GetBonusRateWithPassive(SKILL_ICE_CRASH , STATE_ICE_CRASH, 2, 1.0);\n        //获取攻击参数动态数据编号为2，obj.sq_GetBonusRateWithPassive是获取百分比伤害\n        //参数 技能lst，状态参数，在动态数据里的编号，1.0代表了1倍伤害，如果改成10.0就是10倍伤害\n        sq_SetCurrentAttackBonusRate(sq_GetCurrentAttackInfo(obj), attackPower);    \n        sq_SetMyShake(obj,2,120);    \n        //屏幕震动，2为等级，120为时间\n    }        \n}\n\nfunction onTimeEvent_IceCrash(obj, timeEventIndex, timeEventCount)\n{    \n//setTimeEvent函数注意下\n    if(!obj)\n        return false;\n\n    if(!obj.isMyControlObject())\n        return false;\n\n    if(timeEventIndex == ENUM_ICE_CRASH_TIMER_SPIN)\n    {    \n    //时间id 为 0 ，那么久设定状态为结束\n        obj.sq_IntVectClear();\n        obj.sq_IntVectPush(ENUM_ICE_CRASH_SUBSTATE_END); \n        obj.sq_AddSetStatePacket(STATE_ICE_CRASH , STATE_PRIORITY_USER, true);\n        return true; \n    }\n    else if( timeEventIndex == ENUM_ICE_CRASH_MULTI_HIT )\n    {        \n    //如果时间id 为 1，那么就对当前敌人进行打击--代码解析\n        if(obj.getSkillSubState() == ENUM_ICE_CRASH_SUBSTATE_END)\n      //获取我的状态，onSetState 里的 obj.setSkillSubState(subState)了解一下\n      //如果我的状态为结束，就返回；\n            return true; \n\n\n        local sq_var = obj.getVar();          \n        //指向数组\n        local i=0;        \n        //定义 i 为 0\n        local objectsSize = sq_var.get_obj_vector_size();\n        //获取指向对象数组的元素数量\n        obj.sq_SetCurrentAttackInfo(CUSTOM_ATTACK_INFO_ICE_CRASH);    \n        local attackPower = obj.sq_GetBonusRateWithPassive(SKILL_ICE_CRASH , STATE_ICE_CRASH, 1, 1.0);\n        sq_SetCurrentAttackBonusRate(sq_GetCurrentAttackInfo(obj), attackPower);    \n        //设定攻击\n        for(;i&lt;objectsSize;++i)\n        {\n            local damager = sq_var.get_obj_vector(i);            \n            //去遍历对象数组的每一个对象，生成damager get_obj_vector()就是获取对象数组的\n            if(damager)\n            //damager还存在的话\n                sq_SendHitObjectPacket(obj,damager,0,0,0);\n                //我，obj 对damager实行一次打击行为。不用attack box\n        }\n\n\n    }\n\n    return false;    \n} \n\nfunction removeAllIceCrashAppendage(obj)\n{\n    if(!obj)\n        return;\n    local sq_var = obj.getVar();          \n    local objectsSize = sq_var.get_obj_vector_size();\n\n    for(local i=0;i&lt;objectsSize;++i)\n    {\n        local damager = sq_var.get_obj_vector(i);\n        if(damager)\n            CNSquirrelAppendage.sq_RemoveAppendage(damager, \"Character/ATMage/IceCrash/ap_IceCrash.nut\");        \n    }        \n    sq_var.clear_obj_vector();\n    //清除掉对象数组的所有对象\n}\n\nfunction prepareDraw_IceCrash(obj)\n{\n\n    if(!obj) return;\n\n    local substate = obj.getSkillSubState();\n\n}\n\nfunction onEndCurrentAni_IceCrash(obj)\n{\n    if(!obj) return;\n\n    local subState = obj.getSkillSubState();\n\n    if(subState    == ENUM_ICE_CRASH_SUBSTATE_START) {    \n        obj.sq_IntVectClear();\n        obj.sq_IntVectPush(ENUM_ICE_CRASH_SUBSTATE_LOOP);\n        obj.sq_AddSetStatePacket(STATE_ICE_CRASH, STATE_PRIORITY_USER, true);\n    }\n    else if(subState == ENUM_ICE_CRASH_SUBSTATE_END) {        \n        obj.sq_AddSetStatePacket(STATE_STAND, STATE_PRIORITY_USER, false);\n    }    \n\n}\n\n\nfunction onAttack_IceCrash(obj, damager, boundingBox, isStuck)\n{\n    if(!obj)\n        return 0;\n\n    local subState = obj.getSkillSubState();\n\n    local var = obj.getVar();    \n    if(subState &lt;  ENUM_ICE_CRASH_SUBSTATE_END &amp;&amp; !var.is_obj_vector(damager)) {\n        if(sq_IsHoldable(obj,damager) &amp;&amp; sq_IsGrabable(obj,damager) &amp;&amp; !sq_IsFixture(damager)) {        \n        //上述的if是对收到伤害的对象进行类别判断，如果能够被抓住，能够搬运，不是建筑怪啥的\n\n            local masterAppendage = CNSquirrelAppendage.sq_AppendAppendage(damager, obj, SKILL_ICE_CRASH, false, \"Character/ATMage/IceCrash/ap_IceCrash.nut\", true);        \n            //给这个damager附加上一个appendage（具体看文件是干啥的）         \n            if(masterAppendage) {\n            //如果这个ap是存在的。\n                sq_HoldAndDelayDie(damager, obj, true, true, true, 200, 200, ENUM_DIRECTION_NEUTRAL , masterAppendage);\n                //把这个ap变成为强控性的\n                damager.setCurrentDirection(sq_GetOppositeDirection(obj.getDirection()));\n                //设定损伤者的朝向为我的朝向。\n                //obj.getDirection()获取obj的朝向(left,right) sq_GetOppositeDirection() 为获取参数朝向的反方向 (right,left) damager.setCurrentDirection()为设定damager的朝向为参数\n\n                var.push_obj_vector(damager);\n                //将收到伤害的对象放进对象数组（是指向这个对象）\n            }\n        }\n    }\n\n    if(subState &lt; ENUM_ICE_CRASH_SUBSTATE_LOOP_ATTACKING &amp;&amp; var.get_obj_vector_size() &gt; 0) {\n        obj.sq_IntVectClear();\n        obj.sq_IntVectPush(ENUM_ICE_CRASH_SUBSTATE_LOOP_ATTACKING); \n        obj.sq_AddSetStatePacket(STATE_ICE_CRASH , STATE_PRIORITY_USER, true);\n    }\n}\n\nfunction onKeyFrameFlag_IceCrash(obj, flagIndex)\n{\n    if(!obj) return true;\n\n    if(flagIndex == 1) {        \n        obj.sq_SetStaticMoveInfo(0, 200, 100, false);    \n        //设定x轴移动信息\n        obj.sq_SetMoveDirection(obj.getDirection(), ENUM_DIRECTION_NEUTRAL);\n        //开始移动X轴\n    }\n    else if(flagIndex == 2) {    \n        local level          = sq_GetSkillLevel(obj, SKILL_ICE_CRASH);\n        local speed = sq_GetIntData(obj, SKILL_ICE_CRASH, 1, level);\n\n        obj.sq_SetStaticMoveInfo(0, speed, speed, false);    \n        obj.sq_SetMoveDirection(obj.getDirection(), ENUM_DIRECTION_NEUTRAL);    \n\n        sq_CreateParticle(\"Character/Mage/Particle/IceCrashIceDust.ptl\",obj,0,0,50,true,100,500,100);        \n    }\n    else if(flagIndex == 3) {        \n        removeAllIceCrashAppendage(obj);\n    }\n    return true;\n\n}\n</code></pre>\n\n<p>&nbsp;</p>",
    "auth_users": "旭旭姥姥",
    "img": "",
    "create_at": "2023-06-18T14:20:23.131",
    "view_num": 3241
}
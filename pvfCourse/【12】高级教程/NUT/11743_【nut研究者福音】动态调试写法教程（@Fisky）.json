{
    "content": "<p>先放两张效果图<img alt=\"\" height=\"30\" src=\"https://tb2.bdstatic.com/tb/editor/images/face/i_f25.png?t=20140803\" width=\"30\" /></p>\r\n\r\n<p><img alt=\"\" height=\"324\" src=\"/media/uploads/2023/07/01/1.gif\" width=\"450\" /></p>\r\n\r\n<p><img alt=\"\" height=\"252\" src=\"/media/uploads/2023/07/01/2.gif\" width=\"350\" /></p>\r\n\r\n<p>动态调试的作用不用我多说，很多时候写nut要不断的修改和测试，有了动态调试就不需要再关闭游戏-修改pvf-上游戏测试了，可以直接一直测试，直到满意为止<img alt=\"\" height=\"30\" src=\"https://tb2.bdstatic.com/tb/editor/images/face/i_f25.png?t=20140803\" width=\"30\" /></p>\r\n\r\n<p>下面以动态调试魔法旋风为例来说明写法</p>\r\n\r\n<p>首先再dnf.exe目录下新建test.nut</p>\r\n\r\n<p><img alt=\"\" height=\"169\" src=\"/media/uploads/2023/07/01/3.jpg\" width=\"317\" /></p>\r\n\r\n<p>再打开test.nut文件，在里面写一个函数</p>\r\n\r\n<p><img alt=\"\" height=\"124\" src=\"/media/uploads/2023/07/01/4.jpg\" width=\"457\" /></p>\r\n\r\n<p>然后打开windstrike.nut文件找到function onSetState_WindStrike(obj, state, datas, isResetTimer)</p>\r\n\r\n<p><img alt=\"\" height=\"155\" src=\"/media/uploads/2023/07/01/5.jpg\" width=\"700\" /></p>\r\n\r\n<p>，将红框内的内容都放到test.nut内的function setStateWindStrike(obj)下</p>\r\n\r\n<p>操作完之后就是这样的效果</p>\r\n\r\n<p><img alt=\"\" height=\"146\" src=\"/media/uploads/2023/07/01/6.jpg\" width=\"700\" /></p>\r\n\r\n<p><img alt=\"\" height=\"246\" src=\"/media/uploads/2023/07/01/7.jpg\" width=\"700\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"color:#e74c3c\">最重要的一步来了，我们要在function onSetState_WindStrike(obj, state, datas, isResetTimer)下调用test.nut内定义的function setStateWindStrike(obj)，因为function setStateWindStrike(obj)是写在pvf之外的，所以在游戏运行时就可以修改function setStateWindStrike(obj)的内容，从而实现动态调试</span></p>\r\n\r\n<p>调用形式就是这样</p>\r\n\r\n<p><img alt=\"\" height=\"252\" src=\"/media/uploads/2023/07/01/8.jpg\" width=\"700\" /></p>\r\n\r\n<p>最后关键的来了</p>\r\n\r\n<p><img alt=\"\" height=\"231\" src=\"/media/uploads/2023/07/01/9.jpg\" width=\"700\" /></p>\r\n\r\n<p>，在每次释放技能时读取test.nut文件里的内容，dofile语句执行之后，定义在test.nut内的函数function setStateWindStrike(obj)就可以在pvf内生效了，这一步是关联pvf内外的关键</p>\r\n\r\n<p>因为dofile可以读取pvf以外的nut脚本，所以可以把一些函数放外面，当成一个函数库来用</p>",
    "auth_users": "玲珑",
    "img": "https://dafstatic.oss-cn-beijing.aliyuncs.com/static/title/level6.gif",
    "create_at": "2023-07-01T14:10:00.498",
    "view_num": 1052
}